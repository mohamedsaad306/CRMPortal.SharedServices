@model CRMPortal.SharedServices.ViewModels.PurchaseOrderFormViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Initiate New Purchase Order Request</h2>


@using (Html.BeginForm("Save", "PurchaseOrder"))
{
    <div class="container">
        <legend class="legend">Purchase Order</legend>

        <div class="panel">

            <div class="panel-body">

                <div>
                    @Html.ActionLink("List of all Purchase Orders", "Index", "PurchaseOrder", new { @class = "btn btn-info btn-pressure" })
                </div>
                <br />

                <div class="col-md-6 col-sm-6">
                    <div class="row">

                        <div class="form-group">
                            <div class="col-md-6 col-sm-6">
                                @Html.LabelFor(m => m.RequestTitle)
                            </div>

                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(m => m.RequestTitle, new { @class = "form-control t" })
                                @*<input type="text" value="@Model.RequestTitle" class="form-control" @ViewBag.IsReadOnly />*@
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6 col-sm-6">
                                @Html.LabelFor(m => m.NumberOfitems)

                            </div>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(m => m.NumberOfitems, new { @class = "form-control t" })
                                @*<input type="number" value="@Model.NumberOfitems" class="form-control" @ViewBag.IsReadOnly />*@
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6 col-sm-6">
                                @Html.LabelFor(m => m.ItemName)

                            </div>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(m => m.ItemName, new { @class = "form-control t" })
                                @*<input type="text" value="@Model.ItemName" class="form-control" @ViewBag.IsReadOnly />*@
                            </div>
                        </div>

                        <div class="form-group" !hidden>
                            <div class="col-md-6 col-sm-6">
                                @Html.LabelFor(m => m.Purpose)
                            </div>

                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(m => m.Purpose, new { @class = "form-control t" })
                                @*<input type="text" value="@Model.Purpose" class = "form-control" @ViewBag.IsReadOnly />*@
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" name="isReadOnly" value="@ViewBag.IsReadOnly" class="btn btn-primary">Submit Request</button>
                            <button type="submit" name="isReadOnly" value="@ViewBag.IsReadOnly" class="btn btn-default">Save as Draft</button>
                            @Html.ActionLink("Cancel", "Index", "PurchaseOrder", new { @class = "btn btn-default" })
                            @* @Html.ActionLink("Save", "Save", "PurchaseOrder", new { @class = "btn btn-success" })*@
                            @*@Html.ActionLink("Save as Draft", "Draft", "PurchaseOrder", new { @class = "btn btn-default" })*@
                            @* @Html.HiddenFor(m => m.SaveOrDraft)*@

                            @*<input type="hidden" id="savedraft" name="SaveOrDraft" value="" />*@
                        </div>
                    </div>


                </div>
            </div>

        </div>

    </div>
}
<script type="text/javascript" src="/scripts/jquery-3.1.1.js"></script>

<script>
    (function () {
        var isReadOnly = '@(ViewBag.IsReadOnly)';
        if (isReadOnly == 'readonly') {
            $('.t').prop('readonly', true);
        }
    })();
</script>
